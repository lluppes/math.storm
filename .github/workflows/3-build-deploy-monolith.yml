# ------------------------------------------------------------------------------------------------------------------------
# GHA Workflow to build and deploy WebApp only - no bicep deploy
# ------------------------------------------------------------------------------------------------------------------------
# FYI: You need to set up some secrets before running this workflows - see CreateGitHubSecrets.md for details.
# ------------------------------------------------------------------------------------------------------------------------
name: 3.build.deploy.monolith
run-name: '3 - Build & Deploy Monolith: using ENV ${{ inputs.deployEnvironment }} by @${{ github.actor }}'

on:
  workflow_dispatch:
    inputs:
      deployEnvironment:
        description: Environment
        default: 'dev' 
        type: environment
      runMSDevSecOpsScan:
        description: 'Run MS DevSecOps Scan'
        required: false
        default: false
        type: boolean
      runGHASScan:
        description: 'Run GitHub Advanced Security Scan'
        required: false
        default: false
        type: boolean
      runBuildDeploy:
        description: Build and Deploy App
        default: true
        type: boolean
      # runSmokeTest:
      #   description: Run Smoke Tests
      #   default: false
      #   type: boolean
      logLevel:
        description: Log level
        default: 'warning' 
        type: choice
        options:
          - info
          - warning
          - debug 

# ------------------------------------------------------------------------------------------------------------------------
permissions:
  id-token: write
  contents: write
  actions: read
  pages: write
  security-events: write
  checks: write
  issues: read
  pull-requests: read
  packages: read

# ------------------------------------------------------------------------------------------------------------------------
jobs:
  scan-code:
    name: Scan Source Code
    uses: ./.github/workflows/template-scan-code.yml
    secrets: inherit
    if: inputs.runMSDevSecOpsScan || inputs.runGHASScan
    with:
      runMSDevSecOpsScan: ${{ inputs.runMSDevSecOpsScan }}
      runGHASScan: ${{ inputs.runGHASScan }}

  # ------------------------------------------------------------------------------------------------------------------------
  # gh variable set APP_PROJECT_FOLDER_NAME -b src/archive/Monolith/MathStorm.Web
  # gh variable set APP_PROJECT_NAME -b MathStorm.Web
  # gh variable set APP_TEST_FOLDER_NAME -b src/archive/Monolith/MathStorm.Web.Tests
  # gh variable set APP_TEST_PROJECT_NAME -b MathStorm.Web.Tests
  build-webapp:
    name: Build WebApp
    uses: ./.github/workflows/template-webapp-build.yml
    if: inputs.runBuildDeploy || inputs.runSmokeTest
    secrets: inherit
    with:
      envCode: ${{ inputs.deployEnvironment }}
      rootDirectory: 'src/archive/monolith/MathStorm.Web'
      projectName: 'MathStorm.Web'
      testDirectory: 'src/archive/monolith/MathStorm.Web.Tests'
      testProjectName: 'MathStorm.Web.Tests'
      # rootDirectory: '${{ vars.APP_PROJECT_FOLDER_NAME }}'
      # projectName: '${{ vars.APP_PROJECT_NAME }}'
      # testDirectory: '${{ vars.APP_TEST_FOLDER_NAME }}'
      # testProjectName: '${{ vars.APP_TEST_PROJECT_NAME }}'
      testApplication: true
      listFilesAfterBuild: true


# ------------------------------------------------------------------------------------------------------------------------
  deploy-webapp:
    name: Deploy WebApp ${{ inputs.deployEnvironment }}
    uses: ./.github/workflows/template-webapp-deploy.yml
    if: inputs.runBuildDeploy || inputs.runSmokeTest
    needs: build-webapp
    secrets: inherit
    with:
      envCode: ${{ inputs.deployEnvironment }}
      listFilesBeforeDeploy: true
      
# # ------------------------------------------------------------------------------------------------------------------------
#   run-smoke-test:
#     name: Smoke Test ${{ inputs.deployEnvironment }}
#     uses: ./.github/workflows/template-smoke-test.yml
#     if: inputs.runSmokeTest
#     needs: deploy-webapp
#     secrets: inherit
#     with:
#       envCode: ${{ inputs.deployEnvironment }}
#       testPath: 'playwright/ui-tests'
#       testType: 'ui'
